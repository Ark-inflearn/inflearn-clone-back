plugins {
    id 'org.springframework.boot' version '2.6.2'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'org.sonarqube' version '3.3'
    id 'java'
}

group = 'team.ark'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
}

gradle.projectsEvaluated {
    tasks.withType(JavaCompile) {
        options.compilerArgs << '-Xlint:unchecked'
    }
}

tasks.withType(JavaCompile) {
    options.fork = true
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven {
        url 'https://plugins.gradle.org/m2/'
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
}

bootRun {
    systemProperty 'jasypt.encryptor.password', System.getenv('JASYPT_PASSWORD')
}

test {
    useJUnitPlatform()
    maxParallelForks = Runtime.runtime.availableProcessors().intdiv(2) ?: 1
    systemProperty 'jasypt.encryptor.password', System.getenv('JASYPT_PASSWORD')
}

sonarqube {
    properties {
        property "sonar.projectKey", "TEAM-ARK_sprout-backend"
        property "sonar.organization", "team-ark"
        property "sonar.host.url", "https://sonarcloud.io"
    }
}
